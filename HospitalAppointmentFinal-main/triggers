CREATE TRIGGER InsertTrigger
AFTER INSERT ON mbs_doctorschedule
FOR EACH ROW
EXECUTE FUNCTION Insert_Function();

CREATE OR REPLACE FUNCTION Insert_Function() RETURNS Trigger AS $$
BEGIN
    call generate_doctor_slots(new.doctorid); 
	return new;
END;
$$ LANGUAGE plpgsql;


CREATE TRIGGER UpdateTrigger
AFTER Update ON mbs_doctorschedule
FOR EACH ROW
EXECUTE FUNCTION Update_Function();


CREATE OR REPLACE FUNCTION Update_Function() RETURNS Trigger AS $$
Declare
	doct_id int;
	ftime time;
	ttime time;
BEGIN
	doct_id :=old.doctorid;
	ftime :=old.doctoravailablefrom;
	ttime :=old.doctoravailableto;
	delete from mbs_doctorslots where doct_id=slot_doct_id and slot_from=ftime and slot_to=ttime;
    call generate_doctor_slots(new.doctorid); 
	return new;
END;
$$ LANGUAGE plpgsql;






























<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JavaScript Calendar</title>
    <style>
        /* styles.css */
        body {
            font-family: Arial, sans-serif;
        }

        #calendar {
            max-width: 400px;
            margin: 0 auto;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        table, th, td {
            border: 1px solid #ccc;
            text-align: center;
        }

        th, td {
            padding: 10px;
        }

        button {
            background-color: #007BFF;
            color: #fff;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div id="calendar">
        <div class="header">
            <button id="prev">Previous</button>
            <h2 id="month-year"></h2>
            <button id="next">Next</button>
        </div>
        <table>
            <thead>
                <tr>
                    <th>Sun</th>
                    <th>Mon</th>
                    <th>Tue</th>
                    <th>Wed</th>
                    <th>Thu</th>
                    <th>Fri</th>
                    <th>Sat</th>
                </tr>
            </thead>
            <tbody id="calendar-body"></tbody>
        </table>
    </div>
    <script>
        // script.js
document.addEventListener("DOMContentLoaded", function () {
    const calendarBody = document.getElementById("calendar-body");
    const monthYear = document.getElementById("month-year");
    const prevBtn = document.getElementById("prev");
    const nextBtn = document.getElementById("next");

    const currentDate = new Date();
    let currentMonth = currentDate.getMonth();
    let currentYear = currentDate.getFullYear();

    function renderCalendar(month, year) {
        calendarBody.innerHTML = "";
        monthYear.textContent = `${new Date(year, month).toLocaleString('default', { month: 'long' })} ${year}`;

        const firstDay = new Date(year, month, 1);
        const lastDay = new Date(year, month + 1, 0);
        const daysInMonth = lastDay.getDate();

        let dayCounter = 1;

        for (let i = 0; i < 6; i++) {
            const row = document.createElement("tr");

            for (let j = 0; j < 7; j++) {
                const cell = document.createElement("td");
                if (i === 0 && j < firstDay.getDay()) {
                    // Blank cells before the 1st day
                    cell.textContent = "";
                } else if (dayCounter <= daysInMonth) {
                    cell.textContent = dayCounter;
                    dayCounter++;
                } else {
                    // Blank cells after the last day
                    cell.textContent = "";
                }

                row.appendChild(cell);
            }

            calendarBody.appendChild(row);
        }
    }

    renderCalendar(currentMonth, currentYear);

    prevBtn.addEventListener("click", () => {
        currentMonth--;
        if (currentMonth < 0) {
            currentMonth = 11;
            currentYear--;
        }
        renderCalendar(currentMonth, currentYear);
    });

    nextBtn.addEventListener("click", () => {
        currentMonth++;
        if (currentMonth > 11) {
            currentMonth = 0;
            currentYear++;
        }
        renderCalendar(currentMonth, currentYear);
    });
});

    </script>
</body>
</html>

